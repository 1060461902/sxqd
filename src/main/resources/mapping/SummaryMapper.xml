<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zjgsu.ito.dao.SummaryMapper">
  <resultMap id="BaseResultMap" type="edu.zjgsu.ito.model.Summary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="published_date" jdbcType="TIMESTAMP" property="publishedDate" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="status_id" jdbcType="BIT" property="statusId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="student_recruitment_id" jdbcType="INTEGER" property="studentRecruitmentId" />
    <result column="readover_time" jdbcType="TIMESTAMP" property="readoverTime" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, title, published_date, start_time, end_time, url, status_id, content, 
    student_recruitment_id, readover_time, score, comment
  </sql>
  <select id="selectByExample" parameterType="edu.zjgsu.ito.model.SummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from summary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from summary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zjgsu.ito.model.SummaryExample">
    delete from summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zjgsu.ito.model.Summary">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into summary (student_id, title, published_date, 
      start_time, end_time, url, 
      status_id, content, student_recruitment_id, 
      readover_time, score, comment
      )
    values (#{studentId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{publishedDate,jdbcType=TIMESTAMP}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{url,jdbcType=VARCHAR}, 
      #{statusId,jdbcType=BIT}, #{content,jdbcType=VARCHAR}, #{studentRecruitmentId,jdbcType=INTEGER}, 
      #{readoverTime,jdbcType=TIMESTAMP}, #{score,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.zjgsu.ito.model.Summary">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="publishedDate != null">
        published_date,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="studentRecruitmentId != null">
        student_recruitment_id,
      </if>
      <if test="readoverTime != null">
        readover_time,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="comment != null">
        comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null">
        #{publishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="studentRecruitmentId != null">
        #{studentRecruitmentId,jdbcType=INTEGER},
      </if>
      <if test="readoverTime != null">
        #{readoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zjgsu.ito.model.SummaryExample" resultType="java.lang.Long">
    select count(*) from summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update summary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.publishedDate != null">
        published_date = #{record.publishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.studentRecruitmentId != null">
        student_recruitment_id = #{record.studentRecruitmentId,jdbcType=INTEGER},
      </if>
      <if test="record.readoverTime != null">
        readover_time = #{record.readoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update summary
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      published_date = #{record.publishedDate,jdbcType=TIMESTAMP},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      url = #{record.url,jdbcType=VARCHAR},
      status_id = #{record.statusId,jdbcType=BIT},
      content = #{record.content,jdbcType=VARCHAR},
      student_recruitment_id = #{record.studentRecruitmentId,jdbcType=INTEGER},
      readover_time = #{record.readoverTime,jdbcType=TIMESTAMP},
      score = #{record.score,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zjgsu.ito.model.Summary">
    update summary
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null">
        published_date = #{publishedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="studentRecruitmentId != null">
        student_recruitment_id = #{studentRecruitmentId,jdbcType=INTEGER},
      </if>
      <if test="readoverTime != null">
        readover_time = #{readoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zjgsu.ito.model.Summary">
    update summary
    set student_id = #{studentId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      published_date = #{publishedDate,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      url = #{url,jdbcType=VARCHAR},
      status_id = #{statusId,jdbcType=BIT},
      content = #{content,jdbcType=VARCHAR},
      student_recruitment_id = #{studentRecruitmentId,jdbcType=INTEGER},
      readover_time = #{readoverTime,jdbcType=TIMESTAMP},
      score = #{score,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>