<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zjgsu.ito.dao.StudentHonorMapper">
  <resultMap id="BaseResultMap" type="edu.zjgsu.ito.model.StudentHonor">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="time" jdbcType="VARCHAR" property="time" />
    <result column="instruction" jdbcType="VARCHAR" property="instruction" />
    <result column="honor_name" jdbcType="VARCHAR" property="honorName" />
    <result column="delete_tag" jdbcType="BIT" property="deleteTag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, time, instruction, honor_name, delete_tag
  </sql>
  <select id="selectByExample" parameterType="edu.zjgsu.ito.model.StudentHonorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_honor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_honor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_honor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zjgsu.ito.model.StudentHonorExample">
    delete from student_honor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zjgsu.ito.model.StudentHonor">
    insert into student_honor (id, student_id, time, 
      instruction, honor_name, delete_tag
      )
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR}, 
      #{instruction,jdbcType=VARCHAR}, #{honorName,jdbcType=VARCHAR}, #{deleteTag,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.zjgsu.ito.model.StudentHonor">
    insert into student_honor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="instruction != null">
        instruction,
      </if>
      <if test="honorName != null">
        honor_name,
      </if>
      <if test="deleteTag != null">
        delete_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null">
        #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="honorName != null">
        #{honorName,jdbcType=VARCHAR},
      </if>
      <if test="deleteTag != null">
        #{deleteTag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zjgsu.ito.model.StudentHonorExample" resultType="java.lang.Long">
    select count(*) from student_honor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_honor
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.instruction != null">
        instruction = #{record.instruction,jdbcType=VARCHAR},
      </if>
      <if test="record.honorName != null">
        honor_name = #{record.honorName,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTag != null">
        delete_tag = #{record.deleteTag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_honor
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      time = #{record.time,jdbcType=VARCHAR},
      instruction = #{record.instruction,jdbcType=VARCHAR},
      honor_name = #{record.honorName,jdbcType=VARCHAR},
      delete_tag = #{record.deleteTag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zjgsu.ito.model.StudentHonor">
    update student_honor
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="instruction != null">
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
      <if test="honorName != null">
        honor_name = #{honorName,jdbcType=VARCHAR},
      </if>
      <if test="deleteTag != null">
        delete_tag = #{deleteTag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zjgsu.ito.model.StudentHonor">
    update student_honor
    set student_id = #{studentId,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      instruction = #{instruction,jdbcType=VARCHAR},
      honor_name = #{honorName,jdbcType=VARCHAR},
      delete_tag = #{deleteTag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>