<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zjgsu.ito.dao.StudentRecruitmentViewMapper">
  <resultMap id="BaseResultMap" type="edu.zjgsu.ito.model.StudentRecruitmentView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="recruitment_id" jdbcType="INTEGER" property="recruitmentId" />
    <result column="passing" jdbcType="INTEGER" property="passing" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="delete_tag" jdbcType="BIT" property="deleteTag" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="clss" jdbcType="VARCHAR" property="clss" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_id, recruitment_id, passing, user_id, company_id, teacher_id, status, 
    delete_tag, grade, major, clss
  </sql>
  <select id="selectByExample" parameterType="edu.zjgsu.ito.model.StudentRecruitmentViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_recruitment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.zjgsu.ito.model.StudentRecruitmentViewExample">
    delete from student_recruitment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zjgsu.ito.model.StudentRecruitmentView">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into student_recruitment_view (student_id, recruitment_id, passing, 
      user_id, company_id, teacher_id, 
      status, delete_tag, grade, 
      major, clss)
    values (#{studentId,jdbcType=INTEGER}, #{recruitmentId,jdbcType=INTEGER}, #{passing,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{deleteTag,jdbcType=BIT}, #{grade,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{clss,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.zjgsu.ito.model.StudentRecruitmentView">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into student_recruitment_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="recruitmentId != null">
        recruitment_id,
      </if>
      <if test="passing != null">
        passing,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="deleteTag != null">
        delete_tag,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="clss != null">
        clss,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="recruitmentId != null">
        #{recruitmentId,jdbcType=INTEGER},
      </if>
      <if test="passing != null">
        #{passing,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="deleteTag != null">
        #{deleteTag,jdbcType=BIT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="clss != null">
        #{clss,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zjgsu.ito.model.StudentRecruitmentViewExample" resultType="java.lang.Long">
    select count(*) from student_recruitment_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_recruitment_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.recruitmentId != null">
        recruitment_id = #{record.recruitmentId,jdbcType=INTEGER},
      </if>
      <if test="record.passing != null">
        passing = #{record.passing,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTag != null">
        delete_tag = #{record.deleteTag,jdbcType=BIT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.clss != null">
        clss = #{record.clss,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_recruitment_view
    set id = #{record.id,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      recruitment_id = #{record.recruitmentId,jdbcType=INTEGER},
      passing = #{record.passing,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      delete_tag = #{record.deleteTag,jdbcType=BIT},
      grade = #{record.grade,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      clss = #{record.clss,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>