<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zjgsu.ito.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="edu.zjgsu.ito.model.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="forbidden" jdbcType="BIT" property="forbidden" />
    <result column="rank" jdbcType="VARCHAR" property="rank" />
    <result column="delete_tag" jdbcType="BIT" property="deleteTag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, major, sex, photo, email, forbidden, rank, delete_tag
  </sql>
  <select id="selectByExample" parameterType="edu.zjgsu.ito.model.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zjgsu.ito.model.TeacherExample">
    delete from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zjgsu.ito.model.Teacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher (user_id, major, sex, 
      photo, email, forbidden, 
      rank, delete_tag)
    values (#{userId,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{forbidden,jdbcType=BIT}, 
      #{rank,jdbcType=VARCHAR}, #{deleteTag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="edu.zjgsu.ito.model.Teacher">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="forbidden != null">
        forbidden,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="deleteTag != null">
        delete_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="forbidden != null">
        #{forbidden,jdbcType=BIT},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=VARCHAR},
      </if>
      <if test="deleteTag != null">
        #{deleteTag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zjgsu.ito.model.TeacherExample" resultType="java.lang.Long">
    select count(*) from teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.forbidden != null">
        forbidden = #{record.forbidden,jdbcType=BIT},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTag != null">
        delete_tag = #{record.deleteTag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update teacher
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      major = #{record.major,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      forbidden = #{record.forbidden,jdbcType=BIT},
      rank = #{record.rank,jdbcType=VARCHAR},
      delete_tag = #{record.deleteTag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zjgsu.ito.model.Teacher">
    update teacher
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="forbidden != null">
        forbidden = #{forbidden,jdbcType=BIT},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=VARCHAR},
      </if>
      <if test="deleteTag != null">
        delete_tag = #{deleteTag,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zjgsu.ito.model.Teacher">
    update teacher
    set user_id = #{userId,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      forbidden = #{forbidden,jdbcType=BIT},
      rank = #{rank,jdbcType=VARCHAR},
      delete_tag = #{deleteTag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>